[Something that IT specialists and exterminators have in common is dealing with bugs.]
[To avoid having to scramble to fix things when there's an outage, it's really helpful to have infrastructure that lets us test changes in advance so that we can check that things are working as expected before they reach our users.]
[If we're the ones writing the code, one thing we can do is to make sure that our code has good unit tests and integration tests. If our tests have good coverage of the code, we can rely on them to catch a wide array of bugs whenever there's a change that may break things.]
[Setting up continuous integration can help with that.]
[Another step in this direction is to have a test environment, where we can deploy new code before shipping it to the rest of our users.]
[First, we can do a thorough check of the software as it will be seen by the users.]
[Second, we can use this test environment to troubleshoot problems whenever they happen.]
[another recommended practice when managing a fleet of computers is to deploy software in phases or canaries.]
[upgrade some computers first and check how they behave.]
[like a canary in a coal mine.]
[additional infrastructure.]
[good debug logging in the code.]
[ centralized logs collection.]
[special server that gathers all the logs from all the servers or even all the computers in the network.]
[good monitoring system can be super helpful.]
[We called out ticketing systems a few times already, because we can't stress their importance enough. Making good use of them can help us save a lot of time when trying to get to the bottom of a problem. If we ask users to provide the needed information up front, we don't have to waste time and go back and forth.]
[Finally, remember to spend time writing documentation.]
