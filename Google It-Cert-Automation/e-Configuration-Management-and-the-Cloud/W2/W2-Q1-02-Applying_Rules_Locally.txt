[As we've called out, Puppet is available on a number of different platforms.]
[For this exercise, we'll just go with the Puppet packages provided by the Ubuntu distribution.]
[To do this, we first have to create a file where we'll store the rules that we want to apply. In Puppet lingo, these files are called *manifests and they must end with a.pp extension.]
[see tools_1.pp. Delete _1 to run code.]
[create a package resource.]
[tool similar to top that can show us some extra information.]
[Puppet to ensure that we have this package present on our computer.]
[But before actually applying the rules, we want to check that the command isn't present yet.]
[fix that by running our rules]
[-v ]
[verbose output ]
[first told us that it was loading the facts.]
[Then, that it compiled a catalog.]
[applying the current configuration.]
[installed the package we requested.]
[let us know that it finished applying this catalog.]
[after loading all facts for a computer, the server calculates which rules actually need to be applied.]
[packet should only be installed when a certain condition is met, this condition is evaluated on the server side based on the gathered facts.]
[The catalog is the list of rules that are generated for one specific computer once the server has evaluated all variables, conditionals, and functions.]
[catalog will be exactly the same as our code]
[It's now time to check if our rules actually works.]
[So we'll exit now using q.]
