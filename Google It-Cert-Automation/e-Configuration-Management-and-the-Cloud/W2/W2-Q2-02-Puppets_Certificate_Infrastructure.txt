[all managed machines and the fleet connect to a Puppet server.]
[client send their facts to the server,]
[server then processes the manifests,]
[generates the corresponding catalog,]
[sends it back to the clients who apply it locally]
[apply different rules to different nodes depending on their names.]
[can the server trust that a client is really who he claims to be?]
[complex subject that touches on some important security concepts.]
[security course in the Google IT support professional certificate program led by my colleague, Gian, who explains it in more detail. Puppet uses *public key infrastructure, or PKI,* to establish secure connections between the server and the clients. There's a bunch of different types of public key technologies. The one used by Puppet is *secure sockets layer or SSL.]
[Each machine involved has a pair of keys related to each other, a private key and a public key. The private key is secret, only known to that specific machine, the public key is shared with other machines involved. Machines can then use the standardized process to validate the identity of any other machine. The sender signs a message using the private key and the receiver validates the signature using the corresponding public key.]
[how do machines know which public keys to trust?]
[certificate authority, or CA]
[The CA verifies the identity of the machine and then creates a certificate stating that the public key goes with that machine.]
[So you can use that one, or if your company already has a CA that validates the identity of the machines in your fleet, you can integrate it with Puppet, so you only validate the identities once.]
[When a node checks into the Puppet master for the first time, it requests the certificate. The Puppet master looks at this request and if it can verify the nodes identity, it creates a certificate for that node.]
[identity manually]
[agent node picks up this certificate, it knows it can trust the Puppet master, and the node can use the certificate from then on to identify itself when requesting a catalog.]
[why do we care so much about the identity of the nodes?]
[Puppet rules can sometimes include confidential information that you don't want to fall in the wrong hands.]
[you want to be sure that the machine you're setting up as your web server really is your web server and not a rogue machine that just claims to have the same name.]
[If you're creating a test deployment to try out how Puppet rules get applied, and so you're only managing tests machines, you can configure Puppet to automatically sign all requests, but you should never do this for real computers being used by real users.]
[take the time to authenticate your machines.]
[Instead, you'll want to write a script that verifies the identity of the machines automatically for you.]
