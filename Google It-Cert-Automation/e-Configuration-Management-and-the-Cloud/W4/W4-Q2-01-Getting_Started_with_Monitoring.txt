[The key to ensuring all of this, is to set up good monitoring and alerting rules.]
[Monitoring lets us look into the history and current status of a system.]
[These metrics tell us if the service is behaving as expected or not.]
[When a web server responds to an HTTP request, it starts by sending a response code, followed by the content of the response.]
[404 code means that the page wasn't found, or that a 500 response means that there was an internal server error.]
[e codes in the 500 range, like 501 or 503, tells us that something bad happened on the server while generating a response.]
[400 range means there was a client-side problem in the request.]
[check both the count of response codes and their types to know if everything's okay.]
[e-commerce site, you'll care about how many purchases were made successfully and how many failed to complete.]
[running a mail server, you want to know how many emails were sent and how many got stuck and so on.]
[We'll typically store them in the monitoring system.]
[Some systems like AWS Cloudwatch, Google Stack Driver, or Azure Metrics are offered directly by the Cloud providers.]
[Prometheus, Datadog, or Nagios can be used across vendors.]
[two ways of getting our metrics]
[pull model, which means that the monitoring infrastructure periodically queries our service to get the metrics.]
[push model, which means that our service needs to periodically connect to the system to send the metrics.]
[This dashboard show the progression of the metrics over time.]
[progression of two or more metrics together to check out how the change in one metrics effects another.]
[less traffic than usual.]
[Or if you see that in the past couple days, the memory used by your instances has been going up, you can check if this growth follows a similar increase in another metric, like the amount of requests received or the amount of data being transmitted.]
[a memory leak that needs to be fixed or if it's just an expected consequences of a growth in popularity.]
[Pro tip, you only want to store the metrics that you care about, since storing all of these metrics in the system takes space, and storage space costs money.]
[Whitebox monitoring checks the behavior of the system from the inside.]
[For example, if we want to track how many queries we're making to the database, we might need to add a variable to count this.]
[blackbox monitoring checks the behavior of the system from the outside.]
[very simple check to know if the service is up and to verify if the service is responding from outside your network.]
[how long it takes for a client in a different part of the world to get a response from the system.]
