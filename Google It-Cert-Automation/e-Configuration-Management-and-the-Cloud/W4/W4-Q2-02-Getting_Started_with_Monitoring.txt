[Instead, we set up our services so that they work unattended and deal with problems when they happen.]
[need to detect those problems so that we can deal with them as quickly as possible.]
[much better to create automation that checks the health of your system and notifies you when things don't behave as expected.]
[The most basic approach is to run a job periodically that checks the health of the system and sends out an email if the system isn't healthy.]
[Linux system, we could do this using cron, which is the tool to schedule periodic jobs. We'd pair this with a simple Python script that checks the service and sends any necessary emails.]
[periodically check the state of the service and raise alerts if there's a problem.]
[the metrics you collect represent the state of your service.]
[Raising an alert signals that something is broken and a human needs to respond.]
[more than 10 gigabytes of RAM,]
[ responding with too many 500 errors,]
[queue of requests waiting to get processed gets too long.]
[need immediate attention and those that need attention in the near future.]
[errors to 50 percent of the requests, you should look at what's going on right away. Even if this means waking up in the middle of the night to address whatever is wrong, you'll definitely want to fix this kind of critical problem ASAP.]
[attached storage is 80 percent full, you need to figure out whether to increase the disk size or maybe clean up some of the stored data.]
[we typically configure our systems to raise alerts in two different ways.]
[need immediate attention are called pages, which comes from a device called a pager.]
[Nowadays, most people receive their pages in other forms like SMS, automated phone calls, emails, or through a mobile app, but we still call them pages.]
[non-urgent alerts are usually configured to create bugs or tickets for an IT specialist to take care of during their workday.]
[configured to send email to specific mailing lists or send a message to a chat channel that will be seen by the people maintaining the service.]
[all alerts should be actionable.]
[there's nothing for you to do, then the alert isn't actionable and it should be changed or it shouldn't be there at all.]
[it's just noise.]
[You'd need to tweak the query to make the check useful.]
[un a cron job that copies files from one location to another every 10 minutes,]
[putting this in production, you realize there's a bunch of unimportant reasons that can cause this job to temporarily fail.]
[whenever you go to check out what caused a job to fail, you discover that the following run had succeeded and there's nothing for you to do.]
[the task is running frequently, you don't care if it fails once or twice, you can change the system to only raise the alert if the job fails three times in a row.]
[All of this configuring and tweaking can seem like a lot of work.]
[flip side is that once you've set your systems to raise actionable alerts when needed, you're going to have peace of mind.]
[This lets you concentrate on other tasks without having to worry.]
