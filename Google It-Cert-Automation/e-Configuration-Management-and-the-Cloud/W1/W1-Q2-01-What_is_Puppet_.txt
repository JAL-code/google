[The latest available version at the time this Google course went live is *Puppet 6, which came out in late 2018.]
[client-server architecture.]
[client is known as the *Puppet agent*,]
[service is known as the *Puppet master*.]
[agent connects to the master and sends a bunch of facts that describe the computer to the master.]
[master then processes this information, generates the list of rules that need to be applied on the device, and sends this list back to the agent.]
[agent is then in *charge of making any necessary *changes on the computer.]
[Puppet is a cross-platform application available for all Linux distributions, Windows, and Mac OS.]
[use the same puppet rules for managing a range of different computers.]
[See example_w1_q2_01.bash]
[package 'sudo' should be present on every computer where the rule gets applied.]
[Puppet will determine the type of operating system being used and select the right tool to perform the package installation.]
[On Linux distributions, there are several package management systems like APT, Yum, and DNF.]
[On Mac OS, ]
[The Apple Provider is used for packages that are part of the OS, while the MacPorts provider is used for packages that come from the MacPorts Project.]
[For Windows, we'll need to add an extra attribute to our rule, stating where the installer file is located on the local desk or a network mounted resource.]
[Chocolatey to manage your windows packages, you can add an extra Chocolatey provider to Puppet to support that.]
[We can add, remove, or modify configuration files stored in the system, or change registry entries on Windows.]
[enable, disable, start, or stop the services that run on our computer.]
[configure crone jobs, the scheduled tasks, add, remove, or modify Users and Groups or even execute external commands, if that's what we need.]
